// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: blocks.proto

package blocks_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetAllBlockRequest) Reset() {
	*x = GetAllBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBlockRequest) ProtoMessage() {}

func (x *GetAllBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBlockRequest.ProtoReflect.Descriptor instead.
func (*GetAllBlockRequest) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllBlockRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllBlockRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetAllBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*DataBlock `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Code  int32        `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32        `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string       `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GetAllBlockResponse) Reset() {
	*x = GetAllBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBlockResponse) ProtoMessage() {}

func (x *GetAllBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBlockResponse.ProtoReflect.Descriptor instead.
func (*GetAllBlockResponse) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllBlockResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetAllBlockResponse) GetData() []*DataBlock {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllBlockResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllBlockResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetAllBlockResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DataBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data               string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Nonce              int64  `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Difficulty         int32  `protobuf:"varint,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	MinedBy            string `protobuf:"bytes,5,opt,name=mined_by,json=minedBy,proto3" json:"mined_by,omitempty"`
	MinedAt            string `protobuf:"bytes,6,opt,name=mined_at,json=minedAt,proto3" json:"mined_at,omitempty"`
	Timestamp          string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Hash               string `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash           string `protobuf:"bytes,9,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	StatusId           int32  `protobuf:"varint,10,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	IdUser             string `protobuf:"bytes,11,opt,name=id_user,json=idUser,proto3" json:"id_user,omitempty"`
	LastValidationDate string `protobuf:"bytes,12,opt,name=last_validation_date,json=lastValidationDate,proto3" json:"last_validation_date,omitempty"`
	CreatedAt          string `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DataBlock) Reset() {
	*x = DataBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataBlock) ProtoMessage() {}

func (x *DataBlock) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataBlock.ProtoReflect.Descriptor instead.
func (*DataBlock) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{2}
}

func (x *DataBlock) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DataBlock) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *DataBlock) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DataBlock) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *DataBlock) GetMinedBy() string {
	if x != nil {
		return x.MinedBy
	}
	return ""
}

func (x *DataBlock) GetMinedAt() string {
	if x != nil {
		return x.MinedAt
	}
	return ""
}

func (x *DataBlock) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *DataBlock) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *DataBlock) GetPrevHash() string {
	if x != nil {
		return x.PrevHash
	}
	return ""
}

func (x *DataBlock) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *DataBlock) GetIdUser() string {
	if x != nil {
		return x.IdUser
	}
	return ""
}

func (x *DataBlock) GetLastValidationDate() string {
	if x != nil {
		return x.LastValidationDate
	}
	return ""
}

func (x *DataBlock) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DataBlock) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{3}
}

func (x *GetByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBlockByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *DataBlock `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32      `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32      `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string     `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GetBlockByIDResponse) Reset() {
	*x = GetBlockByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByIDResponse) ProtoMessage() {}

func (x *GetBlockByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByIDResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByIDResponse) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{4}
}

func (x *GetBlockByIDResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetBlockByIDResponse) GetData() *DataBlock {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetBlockByIDResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetBlockByIDResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetBlockByIDResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RequestGetBlockUnCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestGetBlockUnCommit) Reset() {
	*x = RequestGetBlockUnCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetBlockUnCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetBlockUnCommit) ProtoMessage() {}

func (x *RequestGetBlockUnCommit) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetBlockUnCommit.ProtoReflect.Descriptor instead.
func (*RequestGetBlockUnCommit) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{5}
}

type ResponseGetBlockUnCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *BlockTemp `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32      `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32      `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string     `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseGetBlockUnCommit) Reset() {
	*x = ResponseGetBlockUnCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetBlockUnCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetBlockUnCommit) ProtoMessage() {}

func (x *ResponseGetBlockUnCommit) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetBlockUnCommit.ProtoReflect.Descriptor instead.
func (*ResponseGetBlockUnCommit) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseGetBlockUnCommit) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseGetBlockUnCommit) GetData() *BlockTemp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseGetBlockUnCommit) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetBlockUnCommit) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseGetBlockUnCommit) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BlockTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BlockTemp) Reset() {
	*x = BlockTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTemp) ProtoMessage() {}

func (x *BlockTemp) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTemp.ProtoReflect.Descriptor instead.
func (*BlockTemp) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{7}
}

func (x *BlockTemp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlockTemp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BlockTemp) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *BlockTemp) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BlockTemp) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RequestCreateBlockTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RequestCreateBlockTemp) Reset() {
	*x = RequestCreateBlockTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCreateBlockTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCreateBlockTemp) ProtoMessage() {}

func (x *RequestCreateBlockTemp) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCreateBlockTemp.ProtoReflect.Descriptor instead.
func (*RequestCreateBlockTemp) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{8}
}

func (x *RequestCreateBlockTemp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RequestCreateBlockTemp) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ResponseCreateBlockTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *BlockTemp `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32      `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32      `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string     `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseCreateBlockTemp) Reset() {
	*x = ResponseCreateBlockTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCreateBlockTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCreateBlockTemp) ProtoMessage() {}

func (x *ResponseCreateBlockTemp) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCreateBlockTemp.ProtoReflect.Descriptor instead.
func (*ResponseCreateBlockTemp) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseCreateBlockTemp) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseCreateBlockTemp) GetData() *BlockTemp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseCreateBlockTemp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseCreateBlockTemp) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseCreateBlockTemp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RequestUpdateBlockTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RequestUpdateBlockTemp) Reset() {
	*x = RequestUpdateBlockTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUpdateBlockTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUpdateBlockTemp) ProtoMessage() {}

func (x *RequestUpdateBlockTemp) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUpdateBlockTemp.ProtoReflect.Descriptor instead.
func (*RequestUpdateBlockTemp) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{10}
}

func (x *RequestUpdateBlockTemp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUpdateBlockTemp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ResponseUpdateBlockTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *BlockTemp `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Code  int32      `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Type  int32      `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Msg   string     `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseUpdateBlockTemp) Reset() {
	*x = ResponseUpdateBlockTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUpdateBlockTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUpdateBlockTemp) ProtoMessage() {}

func (x *ResponseUpdateBlockTemp) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUpdateBlockTemp.ProtoReflect.Descriptor instead.
func (*ResponseUpdateBlockTemp) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseUpdateBlockTemp) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ResponseUpdateBlockTemp) GetData() *BlockTemp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseUpdateBlockTemp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseUpdateBlockTemp) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ResponseUpdateBlockTemp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_blocks_proto protoreflect.FileDescriptor

var file_blocks_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x92, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x90, 0x03, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x18,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x55, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x40, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xe5, 0x03, 0x0a, 0x13,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x25,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x12, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blocks_proto_rawDescOnce sync.Once
	file_blocks_proto_rawDescData = file_blocks_proto_rawDesc
)

func file_blocks_proto_rawDescGZIP() []byte {
	file_blocks_proto_rawDescOnce.Do(func() {
		file_blocks_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocks_proto_rawDescData)
	})
	return file_blocks_proto_rawDescData
}

var file_blocks_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_blocks_proto_goTypes = []interface{}{
	(*GetAllBlockRequest)(nil),       // 0: blocks_proto.GetAllBlockRequest
	(*GetAllBlockResponse)(nil),      // 1: blocks_proto.GetAllBlockResponse
	(*DataBlock)(nil),                // 2: blocks_proto.DataBlock
	(*GetByIdRequest)(nil),           // 3: blocks_proto.GetByIdRequest
	(*GetBlockByIDResponse)(nil),     // 4: blocks_proto.GetBlockByIDResponse
	(*RequestGetBlockUnCommit)(nil),  // 5: blocks_proto.RequestGetBlockUnCommit
	(*ResponseGetBlockUnCommit)(nil), // 6: blocks_proto.ResponseGetBlockUnCommit
	(*BlockTemp)(nil),                // 7: blocks_proto.BlockTemp
	(*RequestCreateBlockTemp)(nil),   // 8: blocks_proto.RequestCreateBlockTemp
	(*ResponseCreateBlockTemp)(nil),  // 9: blocks_proto.ResponseCreateBlockTemp
	(*RequestUpdateBlockTemp)(nil),   // 10: blocks_proto.RequestUpdateBlockTemp
	(*ResponseUpdateBlockTemp)(nil),  // 11: blocks_proto.responseUpdateBlockTemp
}
var file_blocks_proto_depIdxs = []int32{
	2,  // 0: blocks_proto.GetAllBlockResponse.data:type_name -> blocks_proto.DataBlock
	2,  // 1: blocks_proto.GetBlockByIDResponse.data:type_name -> blocks_proto.DataBlock
	7,  // 2: blocks_proto.ResponseGetBlockUnCommit.data:type_name -> blocks_proto.BlockTemp
	7,  // 3: blocks_proto.ResponseCreateBlockTemp.data:type_name -> blocks_proto.BlockTemp
	7,  // 4: blocks_proto.responseUpdateBlockTemp.data:type_name -> blocks_proto.BlockTemp
	0,  // 5: blocks_proto.blockServicesBlocks.GetBlock:input_type -> blocks_proto.GetAllBlockRequest
	3,  // 6: blocks_proto.blockServicesBlocks.GetBlockByID:input_type -> blocks_proto.GetByIdRequest
	5,  // 7: blocks_proto.blockServicesBlocks.GetBlockUnCommit:input_type -> blocks_proto.RequestGetBlockUnCommit
	8,  // 8: blocks_proto.blockServicesBlocks.CreateBlockTemp:input_type -> blocks_proto.RequestCreateBlockTemp
	10, // 9: blocks_proto.blockServicesBlocks.UpdateBlockTemp:input_type -> blocks_proto.RequestUpdateBlockTemp
	1,  // 10: blocks_proto.blockServicesBlocks.GetBlock:output_type -> blocks_proto.GetAllBlockResponse
	4,  // 11: blocks_proto.blockServicesBlocks.GetBlockByID:output_type -> blocks_proto.GetBlockByIDResponse
	6,  // 12: blocks_proto.blockServicesBlocks.GetBlockUnCommit:output_type -> blocks_proto.ResponseGetBlockUnCommit
	9,  // 13: blocks_proto.blockServicesBlocks.CreateBlockTemp:output_type -> blocks_proto.ResponseCreateBlockTemp
	11, // 14: blocks_proto.blockServicesBlocks.UpdateBlockTemp:output_type -> blocks_proto.responseUpdateBlockTemp
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_blocks_proto_init() }
func file_blocks_proto_init() {
	if File_blocks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blocks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetBlockUnCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetBlockUnCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCreateBlockTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCreateBlockTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUpdateBlockTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUpdateBlockTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blocks_proto_goTypes,
		DependencyIndexes: file_blocks_proto_depIdxs,
		MessageInfos:      file_blocks_proto_msgTypes,
	}.Build()
	File_blocks_proto = out.File
	file_blocks_proto_rawDesc = nil
	file_blocks_proto_goTypes = nil
	file_blocks_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlockServicesBlocksClient is the client API for BlockServicesBlocks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockServicesBlocksClient interface {
	GetBlock(ctx context.Context, in *GetAllBlockRequest, opts ...grpc.CallOption) (*GetAllBlockResponse, error)
	GetBlockByID(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*GetBlockByIDResponse, error)
	GetBlockUnCommit(ctx context.Context, in *RequestGetBlockUnCommit, opts ...grpc.CallOption) (*ResponseGetBlockUnCommit, error)
	CreateBlockTemp(ctx context.Context, in *RequestCreateBlockTemp, opts ...grpc.CallOption) (*ResponseCreateBlockTemp, error)
	UpdateBlockTemp(ctx context.Context, in *RequestUpdateBlockTemp, opts ...grpc.CallOption) (*ResponseUpdateBlockTemp, error)
}

type blockServicesBlocksClient struct {
	cc grpc.ClientConnInterface
}

func NewBlockServicesBlocksClient(cc grpc.ClientConnInterface) BlockServicesBlocksClient {
	return &blockServicesBlocksClient{cc}
}

func (c *blockServicesBlocksClient) GetBlock(ctx context.Context, in *GetAllBlockRequest, opts ...grpc.CallOption) (*GetAllBlockResponse, error) {
	out := new(GetAllBlockResponse)
	err := c.cc.Invoke(ctx, "/blocks_proto.blockServicesBlocks/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockServicesBlocksClient) GetBlockByID(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*GetBlockByIDResponse, error) {
	out := new(GetBlockByIDResponse)
	err := c.cc.Invoke(ctx, "/blocks_proto.blockServicesBlocks/GetBlockByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockServicesBlocksClient) GetBlockUnCommit(ctx context.Context, in *RequestGetBlockUnCommit, opts ...grpc.CallOption) (*ResponseGetBlockUnCommit, error) {
	out := new(ResponseGetBlockUnCommit)
	err := c.cc.Invoke(ctx, "/blocks_proto.blockServicesBlocks/GetBlockUnCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockServicesBlocksClient) CreateBlockTemp(ctx context.Context, in *RequestCreateBlockTemp, opts ...grpc.CallOption) (*ResponseCreateBlockTemp, error) {
	out := new(ResponseCreateBlockTemp)
	err := c.cc.Invoke(ctx, "/blocks_proto.blockServicesBlocks/CreateBlockTemp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockServicesBlocksClient) UpdateBlockTemp(ctx context.Context, in *RequestUpdateBlockTemp, opts ...grpc.CallOption) (*ResponseUpdateBlockTemp, error) {
	out := new(ResponseUpdateBlockTemp)
	err := c.cc.Invoke(ctx, "/blocks_proto.blockServicesBlocks/UpdateBlockTemp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockServicesBlocksServer is the server API for BlockServicesBlocks service.
type BlockServicesBlocksServer interface {
	GetBlock(context.Context, *GetAllBlockRequest) (*GetAllBlockResponse, error)
	GetBlockByID(context.Context, *GetByIdRequest) (*GetBlockByIDResponse, error)
	GetBlockUnCommit(context.Context, *RequestGetBlockUnCommit) (*ResponseGetBlockUnCommit, error)
	CreateBlockTemp(context.Context, *RequestCreateBlockTemp) (*ResponseCreateBlockTemp, error)
	UpdateBlockTemp(context.Context, *RequestUpdateBlockTemp) (*ResponseUpdateBlockTemp, error)
}

// UnimplementedBlockServicesBlocksServer can be embedded to have forward compatible implementations.
type UnimplementedBlockServicesBlocksServer struct {
}

func (*UnimplementedBlockServicesBlocksServer) GetBlock(context.Context, *GetAllBlockRequest) (*GetAllBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedBlockServicesBlocksServer) GetBlockByID(context.Context, *GetByIdRequest) (*GetBlockByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByID not implemented")
}
func (*UnimplementedBlockServicesBlocksServer) GetBlockUnCommit(context.Context, *RequestGetBlockUnCommit) (*ResponseGetBlockUnCommit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockUnCommit not implemented")
}
func (*UnimplementedBlockServicesBlocksServer) CreateBlockTemp(context.Context, *RequestCreateBlockTemp) (*ResponseCreateBlockTemp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBlockTemp not implemented")
}
func (*UnimplementedBlockServicesBlocksServer) UpdateBlockTemp(context.Context, *RequestUpdateBlockTemp) (*ResponseUpdateBlockTemp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBlockTemp not implemented")
}

func RegisterBlockServicesBlocksServer(s *grpc.Server, srv BlockServicesBlocksServer) {
	s.RegisterService(&_BlockServicesBlocks_serviceDesc, srv)
}

func _BlockServicesBlocks_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServicesBlocksServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blocks_proto.blockServicesBlocks/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServicesBlocksServer).GetBlock(ctx, req.(*GetAllBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockServicesBlocks_GetBlockByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServicesBlocksServer).GetBlockByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blocks_proto.blockServicesBlocks/GetBlockByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServicesBlocksServer).GetBlockByID(ctx, req.(*GetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockServicesBlocks_GetBlockUnCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetBlockUnCommit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServicesBlocksServer).GetBlockUnCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blocks_proto.blockServicesBlocks/GetBlockUnCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServicesBlocksServer).GetBlockUnCommit(ctx, req.(*RequestGetBlockUnCommit))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockServicesBlocks_CreateBlockTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCreateBlockTemp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServicesBlocksServer).CreateBlockTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blocks_proto.blockServicesBlocks/CreateBlockTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServicesBlocksServer).CreateBlockTemp(ctx, req.(*RequestCreateBlockTemp))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockServicesBlocks_UpdateBlockTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUpdateBlockTemp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServicesBlocksServer).UpdateBlockTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blocks_proto.blockServicesBlocks/UpdateBlockTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServicesBlocksServer).UpdateBlockTemp(ctx, req.(*RequestUpdateBlockTemp))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockServicesBlocks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blocks_proto.blockServicesBlocks",
	HandlerType: (*BlockServicesBlocksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBlock",
			Handler:    _BlockServicesBlocks_GetBlock_Handler,
		},
		{
			MethodName: "GetBlockByID",
			Handler:    _BlockServicesBlocks_GetBlockByID_Handler,
		},
		{
			MethodName: "GetBlockUnCommit",
			Handler:    _BlockServicesBlocks_GetBlockUnCommit_Handler,
		},
		{
			MethodName: "CreateBlockTemp",
			Handler:    _BlockServicesBlocks_CreateBlockTemp_Handler,
		},
		{
			MethodName: "UpdateBlockTemp",
			Handler:    _BlockServicesBlocks_UpdateBlockTemp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blocks.proto",
}
