basePath: /
definitions:
  check-id-api_api_handlers_onboarding.Onboarding:
    properties:
      method:
        type: string
      url:
        type: string
    type: object
  clients.Client:
    properties:
      banner:
        type: string
      full_name:
        type: string
      id:
        type: integer
      logo_small:
        type: string
      main_color:
        type: string
      nit:
        type: string
      second_color:
        type: string
      url_api:
        type: string
      url_redirect:
        type: string
    type: object
  clients.ResAnny:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  clients.ResClient:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/clients.Client'
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  onboarding.ReqUploadSelfie:
    properties:
      document:
        type: string
      onboarding_id:
        type: string
      selfie:
        type: string
    type: object
  onboarding.RequestProcessOnboarding:
    properties:
      document_back:
        type: string
      document_front:
        type: string
      onboarding:
        type: string
      selfie:
        type: string
      user_id:
        type: string
    type: object
  onboarding.RequestValidationIdentity:
    properties:
      selfie:
        type: string
      user_id:
        type: string
      validation_id:
        type: integer
    type: object
  onboarding.ResProcessOnboarding:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  onboarding.resCreateOnboarding:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/check-id-api_api_handlers_onboarding.Onboarding'
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  traceability.Traceability:
    properties:
      action:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  traceability.resTraceability:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/traceability.Traceability'
        type: array
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  users.RequestCreateUser:
    properties:
      cellphone:
        type: string
      document_number:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
  users.ResponseGetUserFile:
    properties:
      code:
        type: integer
      data:
        type: string
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  users.ResponseLogin:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/users.Token'
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  users.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  users.User:
    properties:
      age:
        type: integer
      back_document_img:
        type: string
      birth_date:
        type: string
      block_date:
        type: string
      cellphone:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      department:
        type: string
      disabled_date:
        type: string
      document_number:
        type: string
      email:
        type: string
      failed_attempts:
        type: integer
      first_name:
        type: string
      first_surname:
        type: string
      front_document_img:
        type: string
      gender:
        type: string
      id:
        type: string
      is_deleted:
        type: boolean
      last_change_password:
        type: string
      last_login:
        type: string
      nationality:
        type: string
      nickname:
        type: string
      process_url:
        type: string
      real_ip:
        type: string
      second_name:
        type: string
      second_surname:
        type: string
      selfie_img:
        type: string
      status_id:
        type: integer
      transaction_id:
        type: string
      type_document:
        type: string
      updated_at:
        type: string
      verified_code:
        type: string
    type: object
  users.reqUploadDocument:
    properties:
      document_back_img:
        type: string
      document_front_img:
        type: string
      user_id:
        type: string
    type: object
  users.reqUploadSelfie:
    properties:
      selfie_img:
        type: string
      user_id:
        type: string
    type: object
  users.requestLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  users.resGetUser:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/users.User'
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  users.responseAnny:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  users.responseCreateUser:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/check-id-api_api_handlers_onboarding.Onboarding'
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
  users.responseFinishOnboarding:
    properties:
      code:
        type: integer
      data:
        type: boolean
      error:
        type: boolean
      msg:
        type: string
      type:
        type: integer
    type: object
host: check-id-dev-api.btigersystem.net
info:
  contact:
    email: luis.lucero@bjungle.net
    name: API Support
  description: Api para OnBoarding y validación de identidad
  license:
    name: Software Owner
    url: https://www.bjungle.net/terms/licenses
  termsOfService: https://www.bjungle.net/terms/
  title: Check ID OnBoarding
  version: "1.4"
paths:
  /api/v1/client:
    post:
      consumes:
      - application/json
      description: Método para crear el cliente en el sistema
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Datos del cliente a crear
        in: body
        name: Client
        required: true
        schema:
          $ref: '#/definitions/clients.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/clients.ResAnny'
      summary: Crea el cliente en el sistema
      tags:
      - Client
  /api/v1/client/{nit}:
    get:
      consumes:
      - application/json
      description: Método para obtener la información del cliente de CheckID
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: NIT del cliente
        in: path
        name: nit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/clients.ResClient'
      summary: Obtiene la data del cliente
      tags:
      - Client
  /api/v1/onboarding/:
    post:
      consumes:
      - application/json
      description: Método que permite iniciar el enrolamiento de un usuario que puede
        ser desde un tercero o desde el mismo sistema
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Datos para el enrolamiento del usuario
        in: body
        name: resCreateOnboarding
        required: true
        schema:
          $ref: '#/definitions/onboarding.resCreateOnboarding'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.resCreateOnboarding'
      summary: Método que permite iniciar el enrolamiento de un usuario
      tags:
      - Onboarding
  /api/v1/onboarding/process:
    post:
      consumes:
      - application/json
      description: Método que permite terminar el enrolamiento de un usuario que ha
        sido validado desde OnlyOne
      parameters:
      - description: Datos para validar el enrolamiento del usuario
        in: body
        name: RequestProcessOnboarding
        required: true
        schema:
          $ref: '#/definitions/onboarding.RequestProcessOnboarding'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.ResProcessOnboarding'
      summary: Método que permite terminar el enrolamiento de un usuario
      tags:
      - Onboarding
  /api/v1/onboarding/selfie-correction:
    get:
      consumes:
      - application/json
      description: Método que permite solicitar la corrección de la selfie y el documento
        de identidad
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.ResProcessOnboarding'
      summary: Método que permite solicitar la corrección de la selfie y el documento
        de identidad
      tags:
      - Onboarding
    post:
      consumes:
      - application/json
      description: Método que permite cargar la selfie y/o el documento de identidad
      parameters:
      - description: Datos para la corrección de la prueba de vida
        in: body
        name: ReqUploadSelfie
        required: true
        schema:
          $ref: '#/definitions/onboarding.ReqUploadSelfie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.ResProcessOnboarding'
      summary: Método que permite cargar la selfie y/o el documento de identidad
      tags:
      - Onboarding
  /api/v1/onboarding/validate_identity:
    post:
      consumes:
      - application/json
      description: Método que permite finalizar la validación de identidad de un usuario
        por la aplicación de OnlyOne
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Datos para validar la identidad del usuario
        in: body
        name: RequestValidationIdentity
        required: true
        schema:
          $ref: '#/definitions/onboarding.RequestValidationIdentity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.ResProcessOnboarding'
      summary: Método que permite finalizar la validación de identidad de un usuario
      tags:
      - Onboarding
  /api/v1/traceability:
    get:
      consumes:
      - application/json
      description: Método para obtención de los datos de trazabilidad de un usuario
        por su id
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/traceability.resTraceability'
      summary: Obtención de los datos de trazabilidad de un usuario por su id
      tags:
      - Traceability
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Método para obtener los datos registrados del usuario
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.resGetUser'
      summary: Obtiene los datos registrados del usuario
      tags:
      - User
  /api/v1/user/create:
    post:
      consumes:
      - application/json
      description: Método que permite la creación de un usuario con los datos básicos
        y permite iniciar el proceso de validación de identidad usando checkid como
        cliente para la solicitud
      parameters:
      - description: Datos para la creación del usuario
        in: body
        name: RequestCreateUser
        required: true
        schema:
          $ref: '#/definitions/users.RequestCreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.responseCreateUser'
      summary: Método que permite la creación de un usuario con los datos básicos
      tags:
      - User
  /api/v1/user/file/{id}:
    get:
      consumes:
      - application/json
      description: Método que permite validar si ha terminado la validación de identidad
        de un usuario
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Id del archivo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResponseGetUserFile'
      summary: Permite validar si ha terminado la validación de identidad de un usuario
      tags:
      - User
  /api/v1/user/finish-onboarding:
    get:
      consumes:
      - application/json
      description: Método que permite validar si se ha finalizado el proceso de enrolamiento
        de un usuario
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.responseFinishOnboarding'
      summary: Permite validar si ha terminado el enrolamiento de un usuario
      tags:
      - User
  /api/v1/user/finish-validation:
    get:
      consumes:
      - application/json
      description: Método que permite validar si ha terminado la validación de identidad
        de un usuario
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.responseFinishOnboarding'
      summary: Permite validar si ha terminado la validación de identidad de un usuario
      tags:
      - User
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: Método que permite autenticar al usuario en el sistema
      parameters:
      - description: Datos para la autenticación
        in: body
        name: requestLogin
        required: true
        schema:
          $ref: '#/definitions/users.requestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResponseLogin'
      summary: Método que permite autenticar al usuario en el sistema
      tags:
      - User
  /api/v1/user/upload-documents:
    post:
      consumes:
      - application/json
      description: Método para cargar el documento de identidad
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Documento de identidad
        in: body
        name: uploadDocument
        required: true
        schema:
          $ref: '#/definitions/users.reqUploadDocument'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.responseAnny'
      summary: Carga del documento de identidad
      tags:
      - User
  /api/v1/user/upload-selfie:
    post:
      consumes:
      - application/json
      description: Método para cargar la selfie del usuario
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Selfie del usuario
        in: body
        name: UploadSelfie
        required: true
        schema:
          $ref: '#/definitions/users.reqUploadSelfie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.responseAnny'
      summary: Carga de selfie del usuario
      tags:
      - User
  /api/v1/user/validate:
    get:
      consumes:
      - application/json
      description: Método para verificar si el usuario ha validado su identidad
      parameters:
      - default: Bearer <Add access token here>
        description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.responseAnny'
      summary: Verifica si el usuario ha validado su identidad
      tags:
      - User
swagger: "2.0"
tags:
- description: Métodos referentes al usuario
  name: User
- description: Métodos referentes a la trazabilidad
  name: Traceability
- description: Métodos referentes al cliente
  name: Client
- description: Métodos referentes al enrolamiento del usuario
  name: Onboarding
